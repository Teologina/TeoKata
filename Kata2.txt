Kata2

Du nu enkapsulera en lista av Medlemmar i ett Hotell lojalitets program. Du gör detta genom att skapa men class som
representerar en medlem (Member) och en lista på medlemmar (MemberList)
Du ska också implementera relevanta Interfaces och IEquatable<Member> and IComparable <Member>, samt initiera en instans av Member med 
relevant men slumpmässig data genom att skapa en class Factory.

1. Deklarera ett Interface IMember som definierar
	- Medlemmens för- och efternamn (property get; set;)
	- Medlemmens bonus nivå som en enum typ, MemberLevel: Blue, Silver, Gold and Platinum (property get; set;)
	- Datum då medlemskapet startades (property get; set;)
	- Metod, RandomInit(), som fyller i alla properties med slumpmässiga värden
	- Tänk på att deklarera enum typen MemberLevel i samma fil som IMember då de hör tillsammans

2. Skriv definitionen av IMember så att IMember också måste implementera IEquitable<> och IComparable<>

3. Implementera IMember i en klass Member
	- Implementera IComparable så att medlemmar sorteras efter bonusnivå, efternamn, förnamn, medlemsdatum
	- Implementera RandomInit()
	- Implementera en constructor som skapar tom instans
	- Override ToString() för att skriva ut medlemsdata
	- Implementera IEquitable<>
		- Kom ihåg legacy: override bool Equals(object obj) => Equals(obj as IMember);
		- override int GetHashCode() =>

4. Deklarera en class factory i Member som skapar en tom instans, initierar den med random data
	- I Member deklarera en public static class Factory
	- I Factory deklarera en internal static IMember CreateWithRandomData() som
		- Skapar en instans av member
		- Anropar RandomInit() på just den instansen
		- Returnerar den nyskapade och ifyllda instansen
		
5. Skriv några kodrader i Program.Main() som testar att skapa instanser av Member.
	- Använda IMember som typ så länge det går.

6. Deklarara ett Interface IMemberList som definierar
	- Metod, Count, som returnerar totala antalet medlemmar
	- Metod, Count(int year), som returnerar totala antalet medlemmar skapade under året "year"
	- Metod, Sort

7. Implementera IMemberList i en class, MemberList
	- Förutom när du skapar en instans av Member, använd typen IMember
	- En tom constructor
	- Override ToString() för att skriva ut kluster om 10 medlemmar 

8. Deklarera en class factory i MemberList som skapar en tom instans med NrOfMembers, och initierar den med random data
	- I MemberList deklarera en public static class Factory
	- I Factory deklarera en internal static IMember CreateWithRandomData(int NrOfMembers) som
		- Skapar en instans av MemberList med NrOfMembers medlemmar
		- I en Loop skapar och lägger till members genom att köra Member.Factory.CreateWithRandomData()
		- Returnerar den nyskapade och ifyllda instansen av MemberList

9. Skriv några kodrader i Program.Main() som skapar en sorterad medlemslista för Hilton med 20 medlemmar
   och en för Radisson med 20 medlemmar

10. Lägg till en class indexer property så att man kan läsa en enskild medlem i listan och ändra i koden i Main()
   så att du skriver ut en Medlem från index 0 i Radisson och Hilton listan 


Träna, Träna, Träna. Ovan moment 1-8 ska jobbas in i långtidsminne och muskelminne
Lycka till!

 
